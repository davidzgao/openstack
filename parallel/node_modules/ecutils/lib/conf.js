// Copyright (c) 2014. This file is confidential and proprietary.
// All Rights Reserved, Microchild Technologies (http://www.microchild.com)

/**
 *  Module: conf.js
 *
 * Collection of functions for dealing with config file.
 */

var nconf = require('nconf');
var fs = require('fs');

var log = require('./logger');
var logger = log.setLogger();

var setLogger = function(exLogger) {
    logger = log.setLogger(exLogger);
};
exports.setLogger = setLogger;

/**
 * Load config file and return with an conf object.
 * By default, we will use name.config as default config file and use
 * /etc/name/name.config as default config file, otherwise use etc under current
 * directory.
 *
 * ### Examples:
 *
 *     var confOptions = {
 *         'script_name': 'mytest',
 *         'config_filename': 'mytest.conf',
 *         'path': __dirname,
 *         'debug': true
 *     };
 *
 *     var conf = require('ecutils').conf;
 *     config = conf.loadConf(confOptions);
 *
 * ### Response:
 *
 * Returns object with config items
 *
 * @parma {Object} options A collection of named parameters
 */
var loadConf = function(options) {
    var path = options['path'];
    var scriptName = options['script_name'];
    var configFilename = options['config_filename'] || scriptName + '.config';
    var debug = options['debug'] || false;
    var configFile = '/etc/' + scriptName + configFilename;
    if(!fs.existsSync(configFile)) {
        configFile = path + '/etc/' + configFilename;
    }

    logger.debug('Loading config file %s...', configFile);

    try {
        return nconf.file({file: configFile});
    } catch(e) {
        throw e;
    }
};
exports.loadConf = loadConf;
