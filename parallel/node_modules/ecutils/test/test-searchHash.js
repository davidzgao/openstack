// Copyright (c) 2014. This file is confidential and proprietary.
// All Rights Reserved, Microchild Technologies (http://www.microchild.com)

var assert = require('assert');

var searchHash;
if (process.env.COVLIB) {
    searchHash = require('./covlib/lib/searchHash');
} else {
    searchHash = require('../lib/searchHash');
}

var data = {
    'name': '123',
    'image': {'id': '456', 'nested': {'id': 321}}
};

suite('Search Hash Testing', function() {
    suite('function getValueOfHashKey', function() {
        test('Value shoud be the value of name in data', function() {
            var value = searchHash.getValueOfHashKey(data, ['name']);
            assert.equal(data['name'], value);
        }); // end test

        test('Value should be the nested value in data', function() {
            var value = searchHash.getValueOfHashKey(data,
                                 ['id','nested','image']);
            assert.equal(321, value);
        }); // end test

        test('The result shoud be undefiend', function() {
            var value = searchHash.getValueOfHashKey(data,
                                 ['type','nested','image']);
            assert.equal(undefined, value);
        }); // end test

        test('There should be error happened and result shoud be null',
            function() {
            var result = searchHash.getValueOfHashKey(data, [undefined,2]);
            assert.equal(null, result);
        }); // end test
    }); // end suite function getValueOfHashKey
}); // end suite searchHash Testing
