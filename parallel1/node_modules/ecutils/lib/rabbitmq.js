// Copyright (c) 2014. This file is confidential and proprietary.
// All Rights Reserved, Microchild Technologies (http://www.microchild.com)

/**
 *  Module: rabbitmq.js
 *
 * Collection of functions for dealing with amqp.
 */

var amqp = require('amqp');

var log = require('./logger');
var logger = log.setLogger();

var setLogger = function(exLogger) {
    logger = log.setLogger(exLogger);
};
exports.setLogger = setLogger;

var subscribe = function(options) {
    var conn = options['conn'];
    var consumerQueue = options['consumer_queue'];
    var exchange = options['exchange'];
    var topicName = options['topic_name'];
    var topicTypes = options['topic_types'];
    var implOptions = {
        'reconnect': true
    };

    var connection = amqp.createConnection(conn, implOptions);

    connection.on('error', function(e) {
        options.error({'type': e.name, 'message': e});
    });

    topicTypes.forEach(function(topicType) {
        connection.on('ready', function() {
            var cQueue = consumerQueue + '.' + topicType;
            connection.queue(cQueue, function(queue) {
                topic = topicName + '.' + topicType;
                queue.bind(exchange, topic);
                queue.subscribe(function(message, contentType, params) {
                    options.success(message, params.exchange);
                });
            }); // end connection.queue
        }); // end connection on ready
    });
} // end var subscribe
exports.subscribe = subscribe;
